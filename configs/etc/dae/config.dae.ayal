global {
    tproxy_port: 12345
    tproxy_port_protect: true
    so_mark_from_dae: 0
    log_level: info
    disable_waiting_network: false
    #lan_interface: docker0
    wan_interface: auto
    auto_config_kernel_parameter: true
    tcp_check_url: 'http://gstatic.com/generate_204'
    tcp_check_http_method: HEAD
    udp_check_dns: 'dns.google.com:53'
    check_interval: 120s
    check_tolerance: 200ms
    dial_mode: domain
    allow_insecure: true
    sniffing_timeout: 5000ms
    tls_implementation: utls
    utls_imitate: chrome_auto
}

subscription {
}

node {
}

# See https://github.com/daeuniverse/dae/blob/main/docs/en/configuration/dns.md for full examples.
dns {
    ipversion_prefer: 4
    upstream {
#        china: 'udp://180.76.76.76:53'
        china: 'tcp://82.156.27.226:50053'
        oversea: 'tcp://dns.google.com:53'
    }
    routing {
        request {
            qname(geosite:category-ads-all) -> reject
#            qname(geosite:zhihu) -> asis
            qname(geosite:cn) -> china
            fallback: oversea
        }
    }
}

group {
    proxy {
        #filter: subtag(feiniao) && name(regex: '新加坡|日本')
        filter: subtag(cent) # && name(keyword: '专线')
        policy: min_avg10
    }
#    rack {
#        filter: name(rn)
#        policy: fixed(0)
#    }
#    spider {
#        filter: subtag(feiniao)
#        policy: random
#    }
}

routing {
#     pname(python,curl) -> spider
    pname(NetworkManager) -> must_direct
    pname(qbittorrent-nox, zerotier-one, BloonsTD6.exe, qq) -> direct

    domain(geosite:"category-ads-all") -> block
    domain(ip.aya1.de) -> proxy
    domain(aya1.de,
        aya1.eu.org,
        ayatale.eu.org,
        thwiki.cc,
        keyword: 'ninjakiwi',
        keyword: 'nkstatic',
        keyword: 'pikpak') -> direct

    l4proto(udp) && dport(443) -> block
    dip(geoip:private, geoip:cn) -> direct
    domain(geosite:cn) -> direct
    fallback: proxy
}
